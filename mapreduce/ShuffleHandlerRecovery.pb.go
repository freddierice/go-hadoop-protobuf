// Code generated by protoc-gen-go.
// source: gopkg.in/freddierice/go-hproto.v1/mapreduce/ShuffleHandlerRecovery.proto
// DO NOT EDIT!

package hproto_mapreduce

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import hproto_common "gopkg.in/freddierice/go-hproto.v1/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type JobShuffleInfoProto struct {
	User             *string                   `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	JobToken         *hproto_common.TokenProto `protobuf:"bytes,2,opt,name=jobToken" json:"jobToken,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *JobShuffleInfoProto) Reset()                    { *m = JobShuffleInfoProto{} }
func (m *JobShuffleInfoProto) String() string            { return proto.CompactTextString(m) }
func (*JobShuffleInfoProto) ProtoMessage()               {}
func (*JobShuffleInfoProto) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *JobShuffleInfoProto) GetUser() string {
	if m != nil && m.User != nil {
		return *m.User
	}
	return ""
}

func (m *JobShuffleInfoProto) GetJobToken() *hproto_common.TokenProto {
	if m != nil {
		return m.JobToken
	}
	return nil
}

func init() {
	proto.RegisterType((*JobShuffleInfoProto)(nil), "hproto.mapreduce.JobShuffleInfoProto")
}

func init() {
	proto.RegisterFile("gopkg.in/freddierice/go-hproto.v1/mapreduce/ShuffleHandlerRecovery.proto", fileDescriptor4)
}

var fileDescriptor4 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x8f, 0x3f, 0x4b, 0x04, 0x31,
	0x14, 0xc4, 0x89, 0x58, 0x68, 0x6c, 0x64, 0x6d, 0x4e, 0x11, 0x11, 0x2b, 0x1b, 0x13, 0x14, 0xc4,
	0xda, 0xab, 0x4e, 0x2b, 0xd9, 0xf3, 0x03, 0x98, 0x4b, 0x5e, 0xfe, 0x78, 0xb7, 0x79, 0xe1, 0xdd,
	0x66, 0xc1, 0x6f, 0xe0, 0xc7, 0x76, 0xc9, 0x86, 0xad, 0x84, 0xeb, 0xc2, 0xcc, 0xe4, 0x37, 0xf3,
	0xf8, 0xca, 0x61, 0xda, 0x3a, 0x11, 0xa2, 0xb4, 0x04, 0xc6, 0x04, 0xa0, 0xa0, 0x41, 0x3a, 0x7c,
	0xf0, 0x89, 0xb0, 0x47, 0x31, 0x3c, 0xca, 0x4e, 0xa5, 0xd1, 0xca, 0xa3, 0xbc, 0xf6, 0xd9, 0xda,
	0x1d, 0xac, 0x54, 0x34, 0x3b, 0xa0, 0x16, 0x34, 0x0e, 0x40, 0x3f, 0xa2, 0x24, 0x9b, 0xf3, 0xfa,
	0x63, 0x8e, 0x5f, 0xbd, 0x1c, 0x66, 0x6b, 0xec, 0x3a, 0x8c, 0x72, 0x0d, 0x3a, 0x53, 0xe8, 0x2b,
	0xea, 0xee, 0x8b, 0x5f, 0xbc, 0xe3, 0xa6, 0xb6, 0xbd, 0x45, 0x8b, 0x1f, 0xa5, 0xa1, 0xe1, 0xc7,
	0x79, 0x0f, 0xb4, 0x60, 0xb7, 0xec, 0xfe, 0xb4, 0x2d, 0xef, 0xe6, 0x99, 0x9f, 0x7c, 0xe3, 0xe6,
	0x13, 0xb7, 0x10, 0x17, 0x47, 0xa3, 0x7e, 0xf6, 0x74, 0x29, 0x2a, 0x7e, 0x62, 0x8b, 0xe2, 0x15,
	0x40, 0x3b, 0x47, 0x97, 0xaf, 0xfc, 0x06, 0xc9, 0x09, 0x95, 0x94, 0xf6, 0x20, 0xbc, 0x32, 0x88,
	0xa9, 0x2e, 0x9f, 0x36, 0x2c, 0xaf, 0xff, 0x3f, 0xb6, 0x80, 0xf6, 0xbf, 0x8c, 0xfd, 0x05, 0x00,
	0x00, 0xff, 0xff, 0x7a, 0xc6, 0x99, 0xd3, 0x3a, 0x01, 0x00, 0x00,
}
