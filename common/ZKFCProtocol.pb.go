// Code generated by protoc-gen-go.
// source: gopkg.in/freddierice/go-hproto.v1/common/ZKFCProtocol.proto
// DO NOT EDIT!

package hproto_common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CedeActiveRequestProto struct {
	MillisToCede     *uint32 `protobuf:"varint,1,req,name=millisToCede" json:"millisToCede,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CedeActiveRequestProto) Reset()                    { *m = CedeActiveRequestProto{} }
func (m *CedeActiveRequestProto) String() string            { return proto.CompactTextString(m) }
func (*CedeActiveRequestProto) ProtoMessage()               {}
func (*CedeActiveRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *CedeActiveRequestProto) GetMillisToCede() uint32 {
	if m != nil && m.MillisToCede != nil {
		return *m.MillisToCede
	}
	return 0
}

type CedeActiveResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CedeActiveResponseProto) Reset()                    { *m = CedeActiveResponseProto{} }
func (m *CedeActiveResponseProto) String() string            { return proto.CompactTextString(m) }
func (*CedeActiveResponseProto) ProtoMessage()               {}
func (*CedeActiveResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

type GracefulFailoverRequestProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GracefulFailoverRequestProto) Reset()                    { *m = GracefulFailoverRequestProto{} }
func (m *GracefulFailoverRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GracefulFailoverRequestProto) ProtoMessage()               {}
func (*GracefulFailoverRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{2} }

type GracefulFailoverResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GracefulFailoverResponseProto) Reset()                    { *m = GracefulFailoverResponseProto{} }
func (m *GracefulFailoverResponseProto) String() string            { return proto.CompactTextString(m) }
func (*GracefulFailoverResponseProto) ProtoMessage()               {}
func (*GracefulFailoverResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{3} }

func init() {
	proto.RegisterType((*CedeActiveRequestProto)(nil), "hproto.common.CedeActiveRequestProto")
	proto.RegisterType((*CedeActiveResponseProto)(nil), "hproto.common.CedeActiveResponseProto")
	proto.RegisterType((*GracefulFailoverRequestProto)(nil), "hproto.common.GracefulFailoverRequestProto")
	proto.RegisterType((*GracefulFailoverResponseProto)(nil), "hproto.common.GracefulFailoverResponseProto")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for ZKFCProtocolService service

type ZKFCProtocolServiceClient interface {
	// *
	// Request that the service cede its active state, and quit the election
	// for some amount of time
	CedeActive(ctx context.Context, in *CedeActiveRequestProto, opts ...grpc.CallOption) (*CedeActiveResponseProto, error)
	GracefulFailover(ctx context.Context, in *GracefulFailoverRequestProto, opts ...grpc.CallOption) (*GracefulFailoverResponseProto, error)
}

type zKFCProtocolServiceClient struct {
	cc *grpc.ClientConn
}

func NewZKFCProtocolServiceClient(cc *grpc.ClientConn) ZKFCProtocolServiceClient {
	return &zKFCProtocolServiceClient{cc}
}

func (c *zKFCProtocolServiceClient) CedeActive(ctx context.Context, in *CedeActiveRequestProto, opts ...grpc.CallOption) (*CedeActiveResponseProto, error) {
	out := new(CedeActiveResponseProto)
	err := grpc.Invoke(ctx, "/hproto.common.ZKFCProtocolService/cedeActive", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zKFCProtocolServiceClient) GracefulFailover(ctx context.Context, in *GracefulFailoverRequestProto, opts ...grpc.CallOption) (*GracefulFailoverResponseProto, error) {
	out := new(GracefulFailoverResponseProto)
	err := grpc.Invoke(ctx, "/hproto.common.ZKFCProtocolService/gracefulFailover", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ZKFCProtocolService service

type ZKFCProtocolServiceServer interface {
	// *
	// Request that the service cede its active state, and quit the election
	// for some amount of time
	CedeActive(context.Context, *CedeActiveRequestProto) (*CedeActiveResponseProto, error)
	GracefulFailover(context.Context, *GracefulFailoverRequestProto) (*GracefulFailoverResponseProto, error)
}

func RegisterZKFCProtocolServiceServer(s *grpc.Server, srv ZKFCProtocolServiceServer) {
	s.RegisterService(&_ZKFCProtocolService_serviceDesc, srv)
}

func _ZKFCProtocolService_CedeActive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CedeActiveRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZKFCProtocolServiceServer).CedeActive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hproto.common.ZKFCProtocolService/CedeActive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZKFCProtocolServiceServer).CedeActive(ctx, req.(*CedeActiveRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZKFCProtocolService_GracefulFailover_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GracefulFailoverRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZKFCProtocolServiceServer).GracefulFailover(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hproto.common.ZKFCProtocolService/GracefulFailover",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZKFCProtocolServiceServer).GracefulFailover(ctx, req.(*GracefulFailoverRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZKFCProtocolService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hproto.common.ZKFCProtocolService",
	HandlerType: (*ZKFCProtocolServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "cedeActive",
			Handler:    _ZKFCProtocolService_CedeActive_Handler,
		},
		{
			MethodName: "gracefulFailover",
			Handler:    _ZKFCProtocolService_GracefulFailover_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor12,
}

func init() {
	proto.RegisterFile("gopkg.in/freddierice/go-hproto.v1/common/ZKFCProtocol.proto", fileDescriptor12)
}

var fileDescriptor12 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xb2, 0x4e, 0xcf, 0x2f, 0xc8,
	0x4e, 0xd7, 0xcb, 0xcc, 0xd3, 0x4f, 0x2b, 0x4a, 0x4d, 0x49, 0xc9, 0x4c, 0x2d, 0xca, 0x4c, 0x4e,
	0xd5, 0x4f, 0xcf, 0xd7, 0xcd, 0x28, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2b, 0x33, 0xd4, 0x4f, 0xce,
	0xcf, 0xcd, 0xcd, 0xcf, 0xd3, 0x8f, 0xf2, 0x76, 0x73, 0x0e, 0x00, 0x89, 0x25, 0xe7, 0xe7, 0xe8,
	0x81, 0x25, 0x85, 0x78, 0xa1, 0x8a, 0x20, 0x2a, 0x94, 0x6c, 0xb8, 0xc4, 0x9c, 0x53, 0x53, 0x52,
	0x1d, 0x93, 0x4b, 0x32, 0xcb, 0x52, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0xc0, 0x3a, 0x84,
	0x94, 0xb8, 0x78, 0x72, 0x33, 0x73, 0x72, 0x32, 0x8b, 0x43, 0xf2, 0x41, 0x2a, 0x24, 0x18, 0x15,
	0x98, 0x34, 0x78, 0x83, 0x50, 0xc4, 0x94, 0x24, 0xb9, 0xc4, 0x91, 0x75, 0x17, 0x17, 0xe4, 0xe7,
	0x15, 0xa7, 0x82, 0xb5, 0x2b, 0xc9, 0x71, 0xc9, 0xb8, 0x17, 0x25, 0x26, 0xa7, 0xa6, 0x95, 0xe6,
	0xb8, 0x25, 0x66, 0xe6, 0xe4, 0x97, 0xa5, 0x16, 0x21, 0x1b, 0xaf, 0x24, 0xcf, 0x25, 0x8b, 0x29,
	0x8f, 0x64, 0x80, 0xd1, 0x43, 0x46, 0x2e, 0x61, 0x64, 0xf7, 0x07, 0xa7, 0x16, 0x95, 0x01, 0xfd,
	0x29, 0x14, 0xcd, 0xc5, 0x95, 0x0c, 0xb7, 0x53, 0x48, 0x55, 0x0f, 0xc5, 0x3f, 0x7a, 0xd8, 0x3d,
	0x23, 0xa5, 0x86, 0x47, 0x19, 0x92, 0xa5, 0x42, 0xb9, 0x5c, 0x02, 0xe9, 0x68, 0xae, 0x12, 0xd2,
	0x46, 0xd3, 0x8b, 0xcf, 0x5b, 0x52, 0x3a, 0x04, 0x15, 0x23, 0x59, 0xe7, 0x64, 0xc6, 0x25, 0x95,
	0x5f, 0x94, 0xae, 0x97, 0x58, 0x90, 0x98, 0x9c, 0x91, 0xaa, 0x97, 0x91, 0x98, 0x92, 0x9f, 0x5f,
	0x00, 0xa4, 0x20, 0x51, 0xe5, 0x24, 0x84, 0xec, 0x7d, 0x30, 0x5d, 0xdc, 0xc1, 0xc8, 0xb8, 0x80,
	0x91, 0x11, 0x10, 0x00, 0x00, 0xff, 0xff, 0xd5, 0xcb, 0x8c, 0x32, 0x02, 0x02, 0x00, 0x00,
}
