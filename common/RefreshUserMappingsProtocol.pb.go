// Code generated by protoc-gen-go.
// source: gopkg.in/freddierice/go-hproto.v1/common/RefreshUserMappingsProtocol.proto
// DO NOT EDIT!

package hproto_common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// *
//  Refresh user to group mappings request.
type RefreshUserToGroupsMappingsRequestProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RefreshUserToGroupsMappingsRequestProto) Reset() {
	*m = RefreshUserToGroupsMappingsRequestProto{}
}
func (m *RefreshUserToGroupsMappingsRequestProto) String() string { return proto.CompactTextString(m) }
func (*RefreshUserToGroupsMappingsRequestProto) ProtoMessage()    {}
func (*RefreshUserToGroupsMappingsRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{0}
}

// *
// void response
type RefreshUserToGroupsMappingsResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RefreshUserToGroupsMappingsResponseProto) Reset() {
	*m = RefreshUserToGroupsMappingsResponseProto{}
}
func (m *RefreshUserToGroupsMappingsResponseProto) String() string { return proto.CompactTextString(m) }
func (*RefreshUserToGroupsMappingsResponseProto) ProtoMessage()    {}
func (*RefreshUserToGroupsMappingsResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{1}
}

// *
// Refresh superuser configuration request.
type RefreshSuperUserGroupsConfigurationRequestProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RefreshSuperUserGroupsConfigurationRequestProto) Reset() {
	*m = RefreshSuperUserGroupsConfigurationRequestProto{}
}
func (m *RefreshSuperUserGroupsConfigurationRequestProto) String() string {
	return proto.CompactTextString(m)
}
func (*RefreshSuperUserGroupsConfigurationRequestProto) ProtoMessage() {}
func (*RefreshSuperUserGroupsConfigurationRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{2}
}

// *
// void response
type RefreshSuperUserGroupsConfigurationResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RefreshSuperUserGroupsConfigurationResponseProto) Reset() {
	*m = RefreshSuperUserGroupsConfigurationResponseProto{}
}
func (m *RefreshSuperUserGroupsConfigurationResponseProto) String() string {
	return proto.CompactTextString(m)
}
func (*RefreshSuperUserGroupsConfigurationResponseProto) ProtoMessage() {}
func (*RefreshSuperUserGroupsConfigurationResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{3}
}

func init() {
	proto.RegisterType((*RefreshUserToGroupsMappingsRequestProto)(nil), "hproto.common.RefreshUserToGroupsMappingsRequestProto")
	proto.RegisterType((*RefreshUserToGroupsMappingsResponseProto)(nil), "hproto.common.RefreshUserToGroupsMappingsResponseProto")
	proto.RegisterType((*RefreshSuperUserGroupsConfigurationRequestProto)(nil), "hproto.common.RefreshSuperUserGroupsConfigurationRequestProto")
	proto.RegisterType((*RefreshSuperUserGroupsConfigurationResponseProto)(nil), "hproto.common.RefreshSuperUserGroupsConfigurationResponseProto")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for RefreshUserMappingsProtocolService service

type RefreshUserMappingsProtocolServiceClient interface {
	// *
	// Refresh user to group mappings.
	RefreshUserToGroupsMappings(ctx context.Context, in *RefreshUserToGroupsMappingsRequestProto, opts ...grpc.CallOption) (*RefreshUserToGroupsMappingsResponseProto, error)
	// *
	// Refresh superuser proxy group list.
	RefreshSuperUserGroupsConfiguration(ctx context.Context, in *RefreshSuperUserGroupsConfigurationRequestProto, opts ...grpc.CallOption) (*RefreshSuperUserGroupsConfigurationResponseProto, error)
}

type refreshUserMappingsProtocolServiceClient struct {
	cc *grpc.ClientConn
}

func NewRefreshUserMappingsProtocolServiceClient(cc *grpc.ClientConn) RefreshUserMappingsProtocolServiceClient {
	return &refreshUserMappingsProtocolServiceClient{cc}
}

func (c *refreshUserMappingsProtocolServiceClient) RefreshUserToGroupsMappings(ctx context.Context, in *RefreshUserToGroupsMappingsRequestProto, opts ...grpc.CallOption) (*RefreshUserToGroupsMappingsResponseProto, error) {
	out := new(RefreshUserToGroupsMappingsResponseProto)
	err := grpc.Invoke(ctx, "/hproto.common.RefreshUserMappingsProtocolService/refreshUserToGroupsMappings", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *refreshUserMappingsProtocolServiceClient) RefreshSuperUserGroupsConfiguration(ctx context.Context, in *RefreshSuperUserGroupsConfigurationRequestProto, opts ...grpc.CallOption) (*RefreshSuperUserGroupsConfigurationResponseProto, error) {
	out := new(RefreshSuperUserGroupsConfigurationResponseProto)
	err := grpc.Invoke(ctx, "/hproto.common.RefreshUserMappingsProtocolService/refreshSuperUserGroupsConfiguration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RefreshUserMappingsProtocolService service

type RefreshUserMappingsProtocolServiceServer interface {
	// *
	// Refresh user to group mappings.
	RefreshUserToGroupsMappings(context.Context, *RefreshUserToGroupsMappingsRequestProto) (*RefreshUserToGroupsMappingsResponseProto, error)
	// *
	// Refresh superuser proxy group list.
	RefreshSuperUserGroupsConfiguration(context.Context, *RefreshSuperUserGroupsConfigurationRequestProto) (*RefreshSuperUserGroupsConfigurationResponseProto, error)
}

func RegisterRefreshUserMappingsProtocolServiceServer(s *grpc.Server, srv RefreshUserMappingsProtocolServiceServer) {
	s.RegisterService(&_RefreshUserMappingsProtocolService_serviceDesc, srv)
}

func _RefreshUserMappingsProtocolService_RefreshUserToGroupsMappings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshUserToGroupsMappingsRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefreshUserMappingsProtocolServiceServer).RefreshUserToGroupsMappings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hproto.common.RefreshUserMappingsProtocolService/RefreshUserToGroupsMappings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefreshUserMappingsProtocolServiceServer).RefreshUserToGroupsMappings(ctx, req.(*RefreshUserToGroupsMappingsRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _RefreshUserMappingsProtocolService_RefreshSuperUserGroupsConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshSuperUserGroupsConfigurationRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefreshUserMappingsProtocolServiceServer).RefreshSuperUserGroupsConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hproto.common.RefreshUserMappingsProtocolService/RefreshSuperUserGroupsConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefreshUserMappingsProtocolServiceServer).RefreshSuperUserGroupsConfiguration(ctx, req.(*RefreshSuperUserGroupsConfigurationRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

var _RefreshUserMappingsProtocolService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hproto.common.RefreshUserMappingsProtocolService",
	HandlerType: (*RefreshUserMappingsProtocolServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "refreshUserToGroupsMappings",
			Handler:    _RefreshUserMappingsProtocolService_RefreshUserToGroupsMappings_Handler,
		},
		{
			MethodName: "refreshSuperUserGroupsConfiguration",
			Handler:    _RefreshUserMappingsProtocolService_RefreshSuperUserGroupsConfiguration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor8,
}

func init() {
	proto.RegisterFile("gopkg.in/freddierice/go-hproto.v1/common/RefreshUserMappingsProtocol.proto", fileDescriptor8)
}

var fileDescriptor8 = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x92, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x65, 0x46, 0x4b, 0x2c, 0x1e, 0xcb, 0x02, 0x65, 0xe0, 0x8f, 0x84, 0x43, 0x3b, 0xc0,
	0x06, 0x52, 0x19, 0x90, 0x40, 0x48, 0xa8, 0x85, 0x07, 0xb0, 0x9c, 0xab, 0x63, 0x41, 0x7d, 0xe6,
	0x2e, 0xae, 0xc4, 0x1b, 0x30, 0xf1, 0x0c, 0x4c, 0x3c, 0x16, 0xcf, 0x42, 0x9b, 0x50, 0x29, 0x95,
	0x20, 0x04, 0xa6, 0x2c, 0xbf, 0xdf, 0xdd, 0x77, 0x5f, 0x2c, 0xaf, 0x1c, 0xc6, 0x07, 0xa7, 0x7d,
	0xc8, 0xa6, 0x04, 0x79, 0xee, 0x81, 0xbc, 0x85, 0xcc, 0xe1, 0x51, 0x11, 0x09, 0x4b, 0xd4, 0xf3,
	0x41, 0x66, 0x71, 0x36, 0xc3, 0x90, 0x8d, 0x61, 0x41, 0x70, 0x71, 0xcf, 0x40, 0x37, 0x26, 0x46,
	0x1f, 0x1c, 0xdf, 0x2e, 0x11, 0x8b, 0x8f, 0xba, 0x62, 0xd5, 0xe6, 0x97, 0x53, 0x0b, 0xfd, 0x03,
	0xb9, 0xd7, 0x70, 0xee, 0xf0, 0x92, 0x30, 0x45, 0x5e, 0xb9, 0x63, 0x78, 0x4a, 0xc0, 0x65, 0x35,
	0xa2, 0x7f, 0x28, 0xf7, 0x5b, 0x51, 0x8e, 0x18, 0x18, 0x6a, 0x76, 0x20, 0x57, 0x51, 0x26, 0x29,
	0x02, 0x2d, 0x85, 0x1a, 0xbf, 0xc0, 0x30, 0xf5, 0x2e, 0x91, 0x29, 0x3d, 0x86, 0xb5, 0xf1, 0x43,
	0x79, 0xdc, 0x49, 0x69, 0xac, 0x19, 0x7e, 0x6c, 0xc8, 0x7e, 0xcb, 0xc9, 0x13, 0xa0, 0xf9, 0xa2,
	0x29, 0xf5, 0x2a, 0xe4, 0x16, 0xfd, 0x1c, 0x5d, 0x9d, 0xe8, 0xb5, 0x52, 0x74, 0xc7, 0x46, 0x7a,
	0xa7, 0x7f, 0xf1, 0x1a, 0xb9, 0xd5, 0xbb, 0x90, 0xbb, 0xf4, 0xfb, 0xb1, 0xea, 0xec, 0xfb, 0x05,
	0x5d, 0x3b, 0xed, 0x9d, 0xff, 0xc7, 0x6f, 0x04, 0x1d, 0x5d, 0xcb, 0x6d, 0x24, 0xa7, 0x4d, 0x34,
	0xb6, 0x00, 0x5d, 0x98, 0x1c, 0x31, 0x6a, 0x06, 0x9b, 0xc8, 0x97, 0xcf, 0xf5, 0x8b, 0x1a, 0xed,
	0xb4, 0xfc, 0x81, 0xea, 0xcb, 0x2f, 0x42, 0xbc, 0x09, 0xf1, 0x19, 0x00, 0x00, 0xff, 0xff, 0x8f,
	0x2f, 0x6a, 0xd9, 0xc7, 0x02, 0x00, 0x00,
}
