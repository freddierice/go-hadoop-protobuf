// Code generated by protoc-gen-go.
// source: gopkg.in/freddierice/go-hproto.v1/yarn/yarn_server_common_protos.proto
// DO NOT EDIT!

package hproto_yarn

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type NodeActionProto int32

const (
	NodeActionProto_NORMAL   NodeActionProto = 0
	NodeActionProto_RESYNC   NodeActionProto = 1
	NodeActionProto_SHUTDOWN NodeActionProto = 2
)

var NodeActionProto_name = map[int32]string{
	0: "NORMAL",
	1: "RESYNC",
	2: "SHUTDOWN",
}
var NodeActionProto_value = map[string]int32{
	"NORMAL":   0,
	"RESYNC":   1,
	"SHUTDOWN": 2,
}

func (x NodeActionProto) Enum() *NodeActionProto {
	p := new(NodeActionProto)
	*p = x
	return p
}
func (x NodeActionProto) String() string {
	return proto.EnumName(NodeActionProto_name, int32(x))
}
func (x *NodeActionProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NodeActionProto_value, data, "NodeActionProto")
	if err != nil {
		return err
	}
	*x = NodeActionProto(value)
	return nil
}
func (NodeActionProto) EnumDescriptor() ([]byte, []int) { return fileDescriptor13, []int{0} }

type NodeStatusProto struct {
	NodeId                *NodeIdProto                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	ResponseId            *int32                       `protobuf:"varint,2,opt,name=response_id,json=responseId" json:"response_id,omitempty"`
	ContainersStatuses    []*ContainerStatusProto      `protobuf:"bytes,3,rep,name=containersStatuses" json:"containersStatuses,omitempty"`
	NodeHealthStatus      *NodeHealthStatusProto       `protobuf:"bytes,4,opt,name=nodeHealthStatus" json:"nodeHealthStatus,omitempty"`
	KeepAliveApplications []*ApplicationIdProto        `protobuf:"bytes,5,rep,name=keep_alive_applications,json=keepAliveApplications" json:"keep_alive_applications,omitempty"`
	ContainersUtilization *ResourceUtilizationProto    `protobuf:"bytes,6,opt,name=containers_utilization,json=containersUtilization" json:"containers_utilization,omitempty"`
	NodeUtilization       *ResourceUtilizationProto    `protobuf:"bytes,7,opt,name=node_utilization,json=nodeUtilization" json:"node_utilization,omitempty"`
	IncreasedContainers   []*ContainerProto            `protobuf:"bytes,8,rep,name=increased_containers,json=increasedContainers" json:"increased_containers,omitempty"`
	QueuedContainerStatus *QueuedContainersStatusProto `protobuf:"bytes,9,opt,name=queued_container_status,json=queuedContainerStatus" json:"queued_container_status,omitempty"`
	XXX_unrecognized      []byte                       `json:"-"`
}

func (m *NodeStatusProto) Reset()                    { *m = NodeStatusProto{} }
func (m *NodeStatusProto) String() string            { return proto.CompactTextString(m) }
func (*NodeStatusProto) ProtoMessage()               {}
func (*NodeStatusProto) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{0} }

func (m *NodeStatusProto) GetNodeId() *NodeIdProto {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *NodeStatusProto) GetResponseId() int32 {
	if m != nil && m.ResponseId != nil {
		return *m.ResponseId
	}
	return 0
}

func (m *NodeStatusProto) GetContainersStatuses() []*ContainerStatusProto {
	if m != nil {
		return m.ContainersStatuses
	}
	return nil
}

func (m *NodeStatusProto) GetNodeHealthStatus() *NodeHealthStatusProto {
	if m != nil {
		return m.NodeHealthStatus
	}
	return nil
}

func (m *NodeStatusProto) GetKeepAliveApplications() []*ApplicationIdProto {
	if m != nil {
		return m.KeepAliveApplications
	}
	return nil
}

func (m *NodeStatusProto) GetContainersUtilization() *ResourceUtilizationProto {
	if m != nil {
		return m.ContainersUtilization
	}
	return nil
}

func (m *NodeStatusProto) GetNodeUtilization() *ResourceUtilizationProto {
	if m != nil {
		return m.NodeUtilization
	}
	return nil
}

func (m *NodeStatusProto) GetIncreasedContainers() []*ContainerProto {
	if m != nil {
		return m.IncreasedContainers
	}
	return nil
}

func (m *NodeStatusProto) GetQueuedContainerStatus() *QueuedContainersStatusProto {
	if m != nil {
		return m.QueuedContainerStatus
	}
	return nil
}

type QueuedContainersStatusProto struct {
	EstimatedQueueWaitTime *int32 `protobuf:"varint,1,opt,name=estimated_queue_wait_time,json=estimatedQueueWaitTime" json:"estimated_queue_wait_time,omitempty"`
	WaitQueueLength        *int32 `protobuf:"varint,2,opt,name=wait_queue_length,json=waitQueueLength" json:"wait_queue_length,omitempty"`
	XXX_unrecognized       []byte `json:"-"`
}

func (m *QueuedContainersStatusProto) Reset()                    { *m = QueuedContainersStatusProto{} }
func (m *QueuedContainersStatusProto) String() string            { return proto.CompactTextString(m) }
func (*QueuedContainersStatusProto) ProtoMessage()               {}
func (*QueuedContainersStatusProto) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{1} }

func (m *QueuedContainersStatusProto) GetEstimatedQueueWaitTime() int32 {
	if m != nil && m.EstimatedQueueWaitTime != nil {
		return *m.EstimatedQueueWaitTime
	}
	return 0
}

func (m *QueuedContainersStatusProto) GetWaitQueueLength() int32 {
	if m != nil && m.WaitQueueLength != nil {
		return *m.WaitQueueLength
	}
	return 0
}

type MasterKeyProto struct {
	KeyId            *int32 `protobuf:"varint,1,opt,name=key_id,json=keyId" json:"key_id,omitempty"`
	Bytes            []byte `protobuf:"bytes,2,opt,name=bytes" json:"bytes,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MasterKeyProto) Reset()                    { *m = MasterKeyProto{} }
func (m *MasterKeyProto) String() string            { return proto.CompactTextString(m) }
func (*MasterKeyProto) ProtoMessage()               {}
func (*MasterKeyProto) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{2} }

func (m *MasterKeyProto) GetKeyId() int32 {
	if m != nil && m.KeyId != nil {
		return *m.KeyId
	}
	return 0
}

func (m *MasterKeyProto) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

type NodeHealthStatusProto struct {
	IsNodeHealthy        *bool   `protobuf:"varint,1,opt,name=is_node_healthy,json=isNodeHealthy" json:"is_node_healthy,omitempty"`
	HealthReport         *string `protobuf:"bytes,2,opt,name=health_report,json=healthReport" json:"health_report,omitempty"`
	LastHealthReportTime *int64  `protobuf:"varint,3,opt,name=last_health_report_time,json=lastHealthReportTime" json:"last_health_report_time,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *NodeHealthStatusProto) Reset()                    { *m = NodeHealthStatusProto{} }
func (m *NodeHealthStatusProto) String() string            { return proto.CompactTextString(m) }
func (*NodeHealthStatusProto) ProtoMessage()               {}
func (*NodeHealthStatusProto) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{3} }

func (m *NodeHealthStatusProto) GetIsNodeHealthy() bool {
	if m != nil && m.IsNodeHealthy != nil {
		return *m.IsNodeHealthy
	}
	return false
}

func (m *NodeHealthStatusProto) GetHealthReport() string {
	if m != nil && m.HealthReport != nil {
		return *m.HealthReport
	}
	return ""
}

func (m *NodeHealthStatusProto) GetLastHealthReportTime() int64 {
	if m != nil && m.LastHealthReportTime != nil {
		return *m.LastHealthReportTime
	}
	return 0
}

type VersionProto struct {
	MajorVersion     *int32 `protobuf:"varint,1,opt,name=major_version,json=majorVersion" json:"major_version,omitempty"`
	MinorVersion     *int32 `protobuf:"varint,2,opt,name=minor_version,json=minorVersion" json:"minor_version,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *VersionProto) Reset()                    { *m = VersionProto{} }
func (m *VersionProto) String() string            { return proto.CompactTextString(m) }
func (*VersionProto) ProtoMessage()               {}
func (*VersionProto) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{4} }

func (m *VersionProto) GetMajorVersion() int32 {
	if m != nil && m.MajorVersion != nil {
		return *m.MajorVersion
	}
	return 0
}

func (m *VersionProto) GetMinorVersion() int32 {
	if m != nil && m.MinorVersion != nil {
		return *m.MinorVersion
	}
	return 0
}

func init() {
	proto.RegisterType((*NodeStatusProto)(nil), "hproto.yarn.NodeStatusProto")
	proto.RegisterType((*QueuedContainersStatusProto)(nil), "hproto.yarn.QueuedContainersStatusProto")
	proto.RegisterType((*MasterKeyProto)(nil), "hproto.yarn.MasterKeyProto")
	proto.RegisterType((*NodeHealthStatusProto)(nil), "hproto.yarn.NodeHealthStatusProto")
	proto.RegisterType((*VersionProto)(nil), "hproto.yarn.VersionProto")
	proto.RegisterEnum("hproto.yarn.NodeActionProto", NodeActionProto_name, NodeActionProto_value)
}

func init() {
	proto.RegisterFile("gopkg.in/freddierice/go-hproto.v1/yarn/yarn_server_common_protos.proto", fileDescriptor13)
}

var fileDescriptor13 = []byte{
	// 669 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x54, 0x5f, 0x4f, 0x13, 0x41,
	0x10, 0xf7, 0xa8, 0x2d, 0xb0, 0x14, 0x5b, 0x57, 0xfe, 0x9c, 0x62, 0x02, 0xd6, 0x68, 0x08, 0x89,
	0x25, 0x98, 0x18, 0x35, 0xd1, 0x87, 0x52, 0x35, 0x18, 0xa1, 0xc0, 0x15, 0x44, 0x12, 0x93, 0x75,
	0xbd, 0x8e, 0xed, 0x4a, 0x7b, 0x77, 0xec, 0x6e, 0x6b, 0xea, 0xb3, 0x0f, 0x7e, 0x07, 0x5f, 0xfc,
	0x2e, 0x7e, 0x31, 0xf7, 0x66, 0xaf, 0xed, 0x9d, 0x10, 0x13, 0x5e, 0xda, 0xdd, 0xf9, 0xfd, 0x99,
	0xb9, 0xd9, 0xd9, 0x25, 0x6f, 0xda, 0x61, 0x74, 0xd6, 0xae, 0x8a, 0x60, 0xf3, 0x8b, 0x84, 0x56,
	0x4b, 0x80, 0x14, 0x3e, 0x6c, 0xb6, 0xc3, 0x47, 0x9d, 0x48, 0x86, 0x3a, 0xac, 0x0e, 0xb6, 0x36,
	0x87, 0x5c, 0x06, 0xf8, 0xc3, 0x14, 0xc8, 0x01, 0x48, 0xe6, 0x87, 0xbd, 0x5e, 0x18, 0x30, 0x24,
	0xa8, 0x2a, 0xfe, 0xd1, 0xb9, 0x84, 0x1f, 0xf3, 0xee, 0x3c, 0xbb, 0x8a, 0x69, 0xda, 0xa6, 0xf2,
	0x27, 0x4f, 0x4a, 0x8d, 0xb0, 0x05, 0x4d, 0xcd, 0x75, 0x5f, 0x1d, 0xa0, 0xf5, 0x16, 0x99, 0x0e,
	0x4c, 0x88, 0x89, 0x96, 0xeb, 0xac, 0x39, 0xeb, 0x73, 0x8f, 0xdd, 0x6a, 0x2a, 0x59, 0x35, 0xa6,
	0xbf, 0x6d, 0x21, 0xd5, 0x2b, 0x04, 0xb8, 0xa1, 0xab, 0x64, 0x4e, 0x82, 0x8a, 0xc2, 0x40, 0xa1,
	0x6c, 0xca, 0xc8, 0xf2, 0x1e, 0x19, 0x85, 0x0c, 0xe1, 0x90, 0x50, 0x3f, 0x0c, 0x34, 0x17, 0x01,
	0x48, 0x65, 0x93, 0x81, 0x72, 0x73, 0x6b, 0x39, 0x63, 0x7f, 0x2f, 0x63, 0x5f, 0x1f, 0xd1, 0x52,
	0x25, 0x79, 0x97, 0x88, 0x69, 0x83, 0x94, 0xe3, 0xec, 0x3b, 0xc0, 0xbb, 0xba, 0x63, 0xa3, 0xee,
	0x75, 0xac, 0xb7, 0x72, 0xa1, 0xde, 0x34, 0xc9, 0x3a, 0x5e, 0xd0, 0xd2, 0x13, 0xb2, 0x7c, 0x06,
	0x10, 0x31, 0xde, 0x15, 0x03, 0x60, 0x3c, 0x8a, 0xba, 0xc2, 0xe7, 0x5a, 0x98, 0x0f, 0x70, 0xf3,
	0x58, 0xe7, 0x6a, 0xc6, 0xb6, 0x36, 0x21, 0x8c, 0xba, 0xb1, 0x18, 0xeb, 0x6b, 0xb1, 0x3c, 0x05,
	0x2a, 0xfa, 0x91, 0x2c, 0x4d, 0xca, 0x67, 0x7d, 0x2d, 0xba, 0xe2, 0x3b, 0x42, 0x6e, 0x01, 0xcb,
	0x7d, 0x90, 0xf1, 0xf5, 0x40, 0x85, 0x7d, 0xe9, 0xc3, 0xf1, 0x84, 0x97, 0xb8, 0x4f, 0x4c, 0x52,
	0x18, 0x3d, 0xb0, 0x6d, 0xc8, 0xf8, 0x4e, 0x5f, 0xc5, 0xb7, 0x14, 0xcb, 0xd3, 0x8e, 0x0d, 0xb2,
	0x20, 0x02, 0x5f, 0x02, 0x57, 0xd0, 0x62, 0x93, 0xa4, 0xee, 0x0c, 0x76, 0x61, 0xe5, 0xf2, 0xd3,
	0xb2, 0x5e, 0xb7, 0xc6, 0xc2, 0x31, 0xa0, 0xe8, 0x27, 0xb2, 0x7c, 0xde, 0x87, 0x7e, 0xda, 0x8c,
	0x29, 0x7b, 0x5e, 0xb3, 0x58, 0xe8, 0x7a, 0xc6, 0xf2, 0x10, 0xb9, 0xf5, 0x7f, 0x0e, 0x3c, 0xe9,
	0xc1, 0x79, 0x16, 0xb4, 0x58, 0xe5, 0x87, 0x43, 0x56, 0xfe, 0x23, 0xa3, 0xcf, 0xc9, 0x6d, 0x50,
	0x5a, 0xf4, 0xb8, 0x36, 0x45, 0xa0, 0x05, 0xfb, 0xc6, 0x85, 0x66, 0x26, 0x04, 0x38, 0xe3, 0x79,
	0x6f, 0x69, 0x4c, 0x40, 0xa3, 0x13, 0x03, 0x1f, 0x19, 0x94, 0x6e, 0x90, 0x9b, 0x48, 0xb5, 0xaa,
	0x2e, 0x04, 0x6d, 0xdd, 0x49, 0xe6, 0xbb, 0x14, 0x03, 0xc8, 0xde, 0xc5, 0x70, 0xe5, 0x25, 0xb9,
	0xb1, 0xc7, 0x95, 0x06, 0xf9, 0x0e, 0x86, 0x36, 0xf1, 0x22, 0x29, 0x9c, 0xc1, 0x70, 0x74, 0x93,
	0xf2, 0x5e, 0xde, 0xec, 0xcc, 0x6d, 0x58, 0x20, 0xf9, 0xcf, 0x43, 0x6d, 0x2e, 0x40, 0x6c, 0x54,
	0xf4, 0xec, 0xa6, 0xf2, 0xcb, 0x21, 0x8b, 0x97, 0x0e, 0x2b, 0x7d, 0x48, 0x4a, 0x42, 0x31, 0x3c,
	0xe6, 0x0e, 0x82, 0x43, 0xf4, 0x9b, 0xf1, 0xe6, 0x85, 0x9a, 0x28, 0x86, 0xf4, 0x3e, 0x99, 0xb7,
	0x38, 0x93, 0x10, 0x85, 0x52, 0xa3, 0xff, 0xac, 0x57, 0xb4, 0x41, 0x0f, 0x63, 0xf4, 0x09, 0x59,
	0xee, 0x9a, 0x2a, 0x59, 0x86, 0x69, 0x5b, 0x91, 0x33, 0xf4, 0x9c, 0xb7, 0x10, 0xc3, 0x3b, 0x29,
	0x49, 0xdc, 0x88, 0xca, 0x07, 0x52, 0x7c, 0x6f, 0xda, 0x3a, 0x1a, 0x9b, 0x38, 0x57, 0x8f, 0x7f,
	0x0d, 0x25, 0x1b, 0xd8, 0x68, 0xf2, 0x85, 0x45, 0x0c, 0x26, 0x4c, 0x24, 0x89, 0x20, 0x45, 0x9a,
	0x4a, 0x48, 0x71, 0x30, 0x21, 0x6d, 0x3c, 0xb5, 0x4f, 0x50, 0xcd, 0x1f, 0xcf, 0x24, 0x25, 0xa4,
	0xd0, 0xd8, 0xf7, 0xf6, 0x6a, 0xbb, 0xe5, 0x6b, 0xf1, 0xda, 0x7b, 0xdd, 0x3c, 0x6d, 0xd4, 0xcb,
	0x0e, 0x2d, 0x92, 0x99, 0xe6, 0xce, 0xf1, 0xd1, 0xab, 0xfd, 0x93, 0x46, 0x79, 0x6a, 0xfb, 0x05,
	0xb9, 0x1b, 0xca, 0x76, 0x95, 0x47, 0xdc, 0xef, 0x40, 0x66, 0x86, 0x70, 0xb9, 0xbd, 0x74, 0x6a,
	0xd6, 0x4d, 0x7c, 0x43, 0xeb, 0xf8, 0x84, 0xa2, 0xb9, 0xfa, 0xe9, 0x38, 0xbf, 0x1d, 0xe7, 0x6f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x67, 0x5c, 0xea, 0x8a, 0x05, 0x00, 0x00,
}
