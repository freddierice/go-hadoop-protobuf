// Code generated by protoc-gen-go.
// source: gopkg.in/freddierice/go-hproto.v1/yarn/yarn_security_token.proto
// DO NOT EDIT!

package hproto_yarn

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type NMTokenIdentifierProto struct {
	AppAttemptId     *ApplicationAttemptIdProto `protobuf:"bytes,1,opt,name=appAttemptId" json:"appAttemptId,omitempty"`
	NodeId           *NodeIdProto               `protobuf:"bytes,2,opt,name=nodeId" json:"nodeId,omitempty"`
	AppSubmitter     *string                    `protobuf:"bytes,3,opt,name=appSubmitter" json:"appSubmitter,omitempty"`
	KeyId            *int32                     `protobuf:"varint,4,opt,name=keyId,def=-1" json:"keyId,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *NMTokenIdentifierProto) Reset()                    { *m = NMTokenIdentifierProto{} }
func (m *NMTokenIdentifierProto) String() string            { return proto.CompactTextString(m) }
func (*NMTokenIdentifierProto) ProtoMessage()               {}
func (*NMTokenIdentifierProto) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

const Default_NMTokenIdentifierProto_KeyId int32 = -1

func (m *NMTokenIdentifierProto) GetAppAttemptId() *ApplicationAttemptIdProto {
	if m != nil {
		return m.AppAttemptId
	}
	return nil
}

func (m *NMTokenIdentifierProto) GetNodeId() *NodeIdProto {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *NMTokenIdentifierProto) GetAppSubmitter() string {
	if m != nil && m.AppSubmitter != nil {
		return *m.AppSubmitter
	}
	return ""
}

func (m *NMTokenIdentifierProto) GetKeyId() int32 {
	if m != nil && m.KeyId != nil {
		return *m.KeyId
	}
	return Default_NMTokenIdentifierProto_KeyId
}

type AMRMTokenIdentifierProto struct {
	AppAttemptId     *ApplicationAttemptIdProto `protobuf:"bytes,1,opt,name=appAttemptId" json:"appAttemptId,omitempty"`
	KeyId            *int32                     `protobuf:"varint,2,opt,name=keyId,def=-1" json:"keyId,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *AMRMTokenIdentifierProto) Reset()                    { *m = AMRMTokenIdentifierProto{} }
func (m *AMRMTokenIdentifierProto) String() string            { return proto.CompactTextString(m) }
func (*AMRMTokenIdentifierProto) ProtoMessage()               {}
func (*AMRMTokenIdentifierProto) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

const Default_AMRMTokenIdentifierProto_KeyId int32 = -1

func (m *AMRMTokenIdentifierProto) GetAppAttemptId() *ApplicationAttemptIdProto {
	if m != nil {
		return m.AppAttemptId
	}
	return nil
}

func (m *AMRMTokenIdentifierProto) GetKeyId() int32 {
	if m != nil && m.KeyId != nil {
		return *m.KeyId
	}
	return Default_AMRMTokenIdentifierProto_KeyId
}

type ContainerTokenIdentifierProto struct {
	ContainerId           *ContainerIdProto           `protobuf:"bytes,1,opt,name=containerId" json:"containerId,omitempty"`
	NmHostAddr            *string                     `protobuf:"bytes,2,opt,name=nmHostAddr" json:"nmHostAddr,omitempty"`
	AppSubmitter          *string                     `protobuf:"bytes,3,opt,name=appSubmitter" json:"appSubmitter,omitempty"`
	Resource              *ResourceProto              `protobuf:"bytes,4,opt,name=resource" json:"resource,omitempty"`
	ExpiryTimeStamp       *int64                      `protobuf:"varint,5,opt,name=expiryTimeStamp" json:"expiryTimeStamp,omitempty"`
	MasterKeyId           *int32                      `protobuf:"varint,6,opt,name=masterKeyId,def=-1" json:"masterKeyId,omitempty"`
	RmIdentifier          *int64                      `protobuf:"varint,7,opt,name=rmIdentifier" json:"rmIdentifier,omitempty"`
	Priority              *PriorityProto              `protobuf:"bytes,8,opt,name=priority" json:"priority,omitempty"`
	CreationTime          *int64                      `protobuf:"varint,9,opt,name=creationTime" json:"creationTime,omitempty"`
	LogAggregationContext *LogAggregationContextProto `protobuf:"bytes,10,opt,name=logAggregationContext" json:"logAggregationContext,omitempty"`
	NodeLabelExpression   *string                     `protobuf:"bytes,11,opt,name=nodeLabelExpression" json:"nodeLabelExpression,omitempty"`
	ContainerType         *ContainerTypeProto         `protobuf:"varint,12,opt,name=containerType,enum=hproto.yarn.ContainerTypeProto" json:"containerType,omitempty"`
	ExecutionType         *ExecutionTypeProto         `protobuf:"varint,13,opt,name=executionType,enum=hproto.yarn.ExecutionTypeProto,def=1" json:"executionType,omitempty"`
	XXX_unrecognized      []byte                      `json:"-"`
}

func (m *ContainerTokenIdentifierProto) Reset()                    { *m = ContainerTokenIdentifierProto{} }
func (m *ContainerTokenIdentifierProto) String() string            { return proto.CompactTextString(m) }
func (*ContainerTokenIdentifierProto) ProtoMessage()               {}
func (*ContainerTokenIdentifierProto) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

const Default_ContainerTokenIdentifierProto_MasterKeyId int32 = -1
const Default_ContainerTokenIdentifierProto_ExecutionType ExecutionTypeProto = ExecutionTypeProto_GUARANTEED

func (m *ContainerTokenIdentifierProto) GetContainerId() *ContainerIdProto {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

func (m *ContainerTokenIdentifierProto) GetNmHostAddr() string {
	if m != nil && m.NmHostAddr != nil {
		return *m.NmHostAddr
	}
	return ""
}

func (m *ContainerTokenIdentifierProto) GetAppSubmitter() string {
	if m != nil && m.AppSubmitter != nil {
		return *m.AppSubmitter
	}
	return ""
}

func (m *ContainerTokenIdentifierProto) GetResource() *ResourceProto {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *ContainerTokenIdentifierProto) GetExpiryTimeStamp() int64 {
	if m != nil && m.ExpiryTimeStamp != nil {
		return *m.ExpiryTimeStamp
	}
	return 0
}

func (m *ContainerTokenIdentifierProto) GetMasterKeyId() int32 {
	if m != nil && m.MasterKeyId != nil {
		return *m.MasterKeyId
	}
	return Default_ContainerTokenIdentifierProto_MasterKeyId
}

func (m *ContainerTokenIdentifierProto) GetRmIdentifier() int64 {
	if m != nil && m.RmIdentifier != nil {
		return *m.RmIdentifier
	}
	return 0
}

func (m *ContainerTokenIdentifierProto) GetPriority() *PriorityProto {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *ContainerTokenIdentifierProto) GetCreationTime() int64 {
	if m != nil && m.CreationTime != nil {
		return *m.CreationTime
	}
	return 0
}

func (m *ContainerTokenIdentifierProto) GetLogAggregationContext() *LogAggregationContextProto {
	if m != nil {
		return m.LogAggregationContext
	}
	return nil
}

func (m *ContainerTokenIdentifierProto) GetNodeLabelExpression() string {
	if m != nil && m.NodeLabelExpression != nil {
		return *m.NodeLabelExpression
	}
	return ""
}

func (m *ContainerTokenIdentifierProto) GetContainerType() ContainerTypeProto {
	if m != nil && m.ContainerType != nil {
		return *m.ContainerType
	}
	return ContainerTypeProto_APPLICATION_MASTER
}

func (m *ContainerTokenIdentifierProto) GetExecutionType() ExecutionTypeProto {
	if m != nil && m.ExecutionType != nil {
		return *m.ExecutionType
	}
	return Default_ContainerTokenIdentifierProto_ExecutionType
}

type ClientToAMTokenIdentifierProto struct {
	AppAttemptId     *ApplicationAttemptIdProto `protobuf:"bytes,1,opt,name=appAttemptId" json:"appAttemptId,omitempty"`
	ClientName       *string                    `protobuf:"bytes,2,opt,name=clientName" json:"clientName,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *ClientToAMTokenIdentifierProto) Reset()                    { *m = ClientToAMTokenIdentifierProto{} }
func (m *ClientToAMTokenIdentifierProto) String() string            { return proto.CompactTextString(m) }
func (*ClientToAMTokenIdentifierProto) ProtoMessage()               {}
func (*ClientToAMTokenIdentifierProto) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *ClientToAMTokenIdentifierProto) GetAppAttemptId() *ApplicationAttemptIdProto {
	if m != nil {
		return m.AppAttemptId
	}
	return nil
}

func (m *ClientToAMTokenIdentifierProto) GetClientName() string {
	if m != nil && m.ClientName != nil {
		return *m.ClientName
	}
	return ""
}

type YARNDelegationTokenIdentifierProto struct {
	Owner            *string `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
	Renewer          *string `protobuf:"bytes,2,opt,name=renewer" json:"renewer,omitempty"`
	RealUser         *string `protobuf:"bytes,3,opt,name=realUser" json:"realUser,omitempty"`
	IssueDate        *int64  `protobuf:"varint,4,opt,name=issueDate" json:"issueDate,omitempty"`
	MaxDate          *int64  `protobuf:"varint,5,opt,name=maxDate" json:"maxDate,omitempty"`
	SequenceNumber   *int32  `protobuf:"varint,6,opt,name=sequenceNumber" json:"sequenceNumber,omitempty"`
	MasterKeyId      *int32  `protobuf:"varint,7,opt,name=masterKeyId" json:"masterKeyId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *YARNDelegationTokenIdentifierProto) Reset()         { *m = YARNDelegationTokenIdentifierProto{} }
func (m *YARNDelegationTokenIdentifierProto) String() string { return proto.CompactTextString(m) }
func (*YARNDelegationTokenIdentifierProto) ProtoMessage()    {}
func (*YARNDelegationTokenIdentifierProto) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{4}
}

func (m *YARNDelegationTokenIdentifierProto) GetOwner() string {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return ""
}

func (m *YARNDelegationTokenIdentifierProto) GetRenewer() string {
	if m != nil && m.Renewer != nil {
		return *m.Renewer
	}
	return ""
}

func (m *YARNDelegationTokenIdentifierProto) GetRealUser() string {
	if m != nil && m.RealUser != nil {
		return *m.RealUser
	}
	return ""
}

func (m *YARNDelegationTokenIdentifierProto) GetIssueDate() int64 {
	if m != nil && m.IssueDate != nil {
		return *m.IssueDate
	}
	return 0
}

func (m *YARNDelegationTokenIdentifierProto) GetMaxDate() int64 {
	if m != nil && m.MaxDate != nil {
		return *m.MaxDate
	}
	return 0
}

func (m *YARNDelegationTokenIdentifierProto) GetSequenceNumber() int32 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

func (m *YARNDelegationTokenIdentifierProto) GetMasterKeyId() int32 {
	if m != nil && m.MasterKeyId != nil {
		return *m.MasterKeyId
	}
	return 0
}

func init() {
	proto.RegisterType((*NMTokenIdentifierProto)(nil), "hproto.yarn.NMTokenIdentifierProto")
	proto.RegisterType((*AMRMTokenIdentifierProto)(nil), "hproto.yarn.AMRMTokenIdentifierProto")
	proto.RegisterType((*ContainerTokenIdentifierProto)(nil), "hproto.yarn.ContainerTokenIdentifierProto")
	proto.RegisterType((*ClientToAMTokenIdentifierProto)(nil), "hproto.yarn.ClientToAMTokenIdentifierProto")
	proto.RegisterType((*YARNDelegationTokenIdentifierProto)(nil), "hproto.yarn.YARNDelegationTokenIdentifierProto")
}

func init() {
	proto.RegisterFile("gopkg.in/freddierice/go-hproto.v1/yarn/yarn_security_token.proto", fileDescriptor7)
}

var fileDescriptor7 = []byte{
	// 682 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x55, 0x4d, 0x4f, 0xdb, 0x40,
	0x10, 0x95, 0xa1, 0x01, 0xb2, 0x01, 0x2a, 0x6d, 0xbf, 0x2c, 0x04, 0x14, 0x45, 0x15, 0xe5, 0x42,
	0x28, 0x1c, 0xaa, 0x0a, 0xa9, 0x6a, 0x0d, 0x44, 0x2d, 0x2d, 0x44, 0xd4, 0x84, 0x03, 0x87, 0x0a,
	0x19, 0x7b, 0x30, 0x2b, 0x62, 0xef, 0x76, 0xbd, 0x29, 0xc9, 0xad, 0xc7, 0x1e, 0xfa, 0x23, 0xfa,
	0xa3, 0x2a, 0xf5, 0x7f, 0xf4, 0x17, 0x74, 0x77, 0xec, 0x38, 0x76, 0xe4, 0x43, 0x7b, 0xe0, 0x82,
	0xb2, 0x6f, 0xde, 0xbc, 0x79, 0x79, 0xbb, 0x43, 0xc8, 0xdb, 0x90, 0x8b, 0x9b, 0xb0, 0xc5, 0xe2,
	0xad, 0x2b, 0x09, 0x41, 0xc0, 0x40, 0x32, 0x1f, 0xb6, 0x42, 0xbe, 0x79, 0x2d, 0x24, 0x57, 0xbc,
	0xf5, 0x75, 0x7b, 0x6b, 0xe8, 0xc9, 0x18, 0xff, 0x5c, 0x24, 0xe0, 0xf7, 0x25, 0x53, 0xc3, 0x0b,
	0xc5, 0x6f, 0x20, 0x6e, 0x21, 0x83, 0x36, 0x32, 0xa6, 0x61, 0x2c, 0xbd, 0xfa, 0x1f, 0x39, 0x84,
	0x92, 0x54, 0xa6, 0xf9, 0xcb, 0x22, 0x8f, 0x3b, 0xc7, 0x5d, 0x23, 0x7c, 0x18, 0x40, 0xac, 0xd8,
	0x95, 0x6e, 0x3e, 0xc1, 0x09, 0x1f, 0xc8, 0xbc, 0x27, 0x84, 0xa3, 0x14, 0x44, 0x42, 0x1d, 0x06,
	0xb6, 0xb5, 0x66, 0x6d, 0x34, 0x76, 0xd6, 0x5b, 0x85, 0xc1, 0x2d, 0x47, 0x88, 0x1e, 0xf3, 0x3d,
	0xc5, 0x78, 0x9c, 0x13, 0xb1, 0xdb, 0x2d, 0xf5, 0xd2, 0x17, 0x64, 0x26, 0xe6, 0x01, 0x68, 0x95,
	0x29, 0x54, 0xb1, 0x4b, 0x2a, 0x1d, 0x2c, 0xa5, 0x7d, 0x19, 0x8f, 0x36, 0x71, 0xfa, 0x69, 0xff,
	0x32, 0x62, 0x5a, 0x45, 0xda, 0xd3, 0xba, 0xaf, 0xee, 0x96, 0x30, 0x6a, 0x93, 0xda, 0x0d, 0x0c,
	0xb5, 0xe8, 0x3d, 0x5d, 0xac, 0xed, 0x4e, 0x6d, 0x6e, 0xbb, 0x29, 0xd0, 0xfc, 0x66, 0x11, 0xdb,
	0x39, 0x76, 0xef, 0xfe, 0x8b, 0xe5, 0x16, 0xa6, 0x26, 0x2d, 0xfc, 0xae, 0x91, 0x95, 0x7d, 0x1e,
	0x2b, 0x8f, 0xc5, 0x20, 0x2b, 0x7d, 0xbc, 0x21, 0x0d, 0x7f, 0x44, 0xc8, 0x6d, 0xac, 0x94, 0x6c,
	0xec, 0x8f, 0xeb, 0xe9, 0xf4, 0x62, 0x07, 0x5d, 0x25, 0x24, 0x8e, 0xde, 0xf3, 0x44, 0x39, 0x41,
	0x20, 0xd1, 0x41, 0xdd, 0x2d, 0x20, 0xff, 0x94, 0xe1, 0x4b, 0x32, 0x27, 0x21, 0xe1, 0x7d, 0xe9,
	0x03, 0xc6, 0xd8, 0xd8, 0x59, 0x2a, 0x39, 0x70, 0xb3, 0x62, 0x3a, 0x3e, 0xe7, 0xd2, 0x0d, 0x72,
	0x1f, 0x06, 0x82, 0xc9, 0x61, 0x97, 0x45, 0x70, 0xaa, 0xbc, 0x48, 0xd8, 0x35, 0xdd, 0x3e, 0xed,
	0x4e, 0xc2, 0xf4, 0x19, 0x69, 0x44, 0x5e, 0xa2, 0x67, 0x7d, 0xc4, 0xa0, 0x66, 0xf2, 0xa0, 0x8a,
	0xb0, 0xf1, 0x2a, 0xa3, 0x71, 0x42, 0xf6, 0x2c, 0x8a, 0x95, 0x30, 0xe3, 0x55, 0x48, 0xc6, 0xcd,
	0x2e, 0xd8, 0x73, 0x15, 0x5e, 0x4f, 0xb2, 0x62, 0xe6, 0x75, 0xc4, 0x35, 0xda, 0xbe, 0x04, 0xbc,
	0x4c, 0x63, 0xcb, 0xae, 0xa7, 0xda, 0x45, 0x8c, 0x7e, 0x26, 0x8f, 0x7a, 0x3c, 0x74, 0xc2, 0x50,
	0x42, 0x88, 0xa8, 0x89, 0x1e, 0x06, 0xca, 0x26, 0x38, 0xe8, 0x79, 0x69, 0xd0, 0x51, 0x15, 0x33,
	0x9d, 0x5a, 0xad, 0xa2, 0x17, 0xe0, 0x81, 0x79, 0xd8, 0x47, 0xde, 0x25, 0xf4, 0xda, 0x03, 0xa1,
	0x63, 0x4c, 0x74, 0xd5, 0x6e, 0xe0, 0x8d, 0x54, 0x95, 0x68, 0x9b, 0x2c, 0xe4, 0x77, 0xdd, 0x1d,
	0x0a, 0xb0, 0xe7, 0x35, 0x77, 0x71, 0xe7, 0x69, 0xf5, 0xfb, 0x30, 0x8c, 0xd4, 0x40, 0xb9, 0x8b,
	0x7e, 0x22, 0x0b, 0x30, 0xd0, 0xff, 0x40, 0xf0, 0x8b, 0x1a, 0x99, 0x85, 0x0a, 0x99, 0x76, 0x91,
	0x81, 0x32, 0xbb, 0xe4, 0xdd, 0x99, 0xe3, 0x3a, 0x9d, 0x6e, 0xbb, 0x7d, 0xe0, 0x96, 0x15, 0x9a,
	0x3f, 0x2c, 0xb2, 0xba, 0xdf, 0x63, 0xfa, 0x5a, 0xba, 0xdc, 0xb9, 0xfb, 0x15, 0xd3, 0xaf, 0xdc,
	0xc7, 0x69, 0x1d, 0x4f, 0xdf, 0x5d, 0xf6, 0xca, 0xc7, 0x48, 0xf3, 0x8f, 0x45, 0x9a, 0xe7, 0x8e,
	0xdb, 0x39, 0x80, 0x5e, 0x16, 0x7a, 0xa5, 0xa5, 0x87, 0xa4, 0xc6, 0x6f, 0x75, 0x2a, 0xe8, 0xa5,
	0xee, 0xa6, 0x07, 0xbd, 0xbf, 0xb3, 0x12, 0x62, 0xb8, 0x85, 0xd1, 0xfe, 0x8c, 0x8e, 0x74, 0xc9,
	0x2c, 0x86, 0xd7, 0x3b, 0x4b, 0xf2, 0xc5, 0xc9, 0xcf, 0x74, 0x99, 0xd4, 0x59, 0x92, 0xf4, 0xe1,
	0xc0, 0x53, 0xe9, 0xd6, 0x4c, 0xbb, 0x63, 0xc0, 0x68, 0x46, 0xde, 0x00, 0x6b, 0xe9, 0x4a, 0x8c,
	0x8e, 0x74, 0x9d, 0x2c, 0x26, 0xf0, 0xa5, 0x0f, 0xb1, 0x0f, 0x9d, 0x7e, 0x74, 0xa9, 0x95, 0x71,
	0x1b, 0xdc, 0x09, 0x94, 0xae, 0x95, 0x57, 0x66, 0x16, 0x49, 0x45, 0x68, 0xef, 0x35, 0x59, 0xe6,
	0x32, 0x6c, 0x79, 0xc2, 0xf3, 0xaf, 0xa1, 0x14, 0x2b, 0x7e, 0xdc, 0x7b, 0x72, 0xae, 0x3f, 0x9f,
	0x66, 0x3f, 0x1c, 0x98, 0x07, 0xa6, 0x90, 0x7c, 0xb7, 0xac, 0x9f, 0x96, 0xf5, 0x37, 0x00, 0x00,
	0xff, 0xff, 0xe7, 0x4e, 0x75, 0xdc, 0x80, 0x06, 0x00, 0x00,
}
