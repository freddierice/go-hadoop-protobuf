// Code generated by protoc-gen-go.
// source: gopkg.in/freddierice/go-hproto.v1/hdfs/datanodelifeline/DatanodeLifelineProtocol.proto
// DO NOT EDIT!

/*
Package hproto_hdfs_datanodelifeline is a generated protocol buffer package.

It is generated from these files:
	gopkg.in/freddierice/go-hproto.v1/hdfs/datanodelifeline/DatanodeLifelineProtocol.proto

It has these top-level messages:
	LifelineResponseProto
*/
package hproto_hdfs_datanodelifeline

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import hproto_hdfs_datanode "gopkg.in/freddierice/go-hproto.v1/hdfs/datanode"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Unlike heartbeats, the response is empty. There is no command dispatch.
type LifelineResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LifelineResponseProto) Reset()                    { *m = LifelineResponseProto{} }
func (m *LifelineResponseProto) String() string            { return proto.CompactTextString(m) }
func (*LifelineResponseProto) ProtoMessage()               {}
func (*LifelineResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterType((*LifelineResponseProto)(nil), "hproto.hdfs.datanodelifeline.LifelineResponseProto")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for DatanodeLifelineProtocolService service

type DatanodeLifelineProtocolServiceClient interface {
	SendLifeline(ctx context.Context, in *hproto_hdfs_datanode.HeartbeatRequestProto, opts ...grpc.CallOption) (*LifelineResponseProto, error)
}

type datanodeLifelineProtocolServiceClient struct {
	cc *grpc.ClientConn
}

func NewDatanodeLifelineProtocolServiceClient(cc *grpc.ClientConn) DatanodeLifelineProtocolServiceClient {
	return &datanodeLifelineProtocolServiceClient{cc}
}

func (c *datanodeLifelineProtocolServiceClient) SendLifeline(ctx context.Context, in *hproto_hdfs_datanode.HeartbeatRequestProto, opts ...grpc.CallOption) (*LifelineResponseProto, error) {
	out := new(LifelineResponseProto)
	err := grpc.Invoke(ctx, "/hproto.hdfs.datanodelifeline.DatanodeLifelineProtocolService/sendLifeline", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DatanodeLifelineProtocolService service

type DatanodeLifelineProtocolServiceServer interface {
	SendLifeline(context.Context, *hproto_hdfs_datanode.HeartbeatRequestProto) (*LifelineResponseProto, error)
}

func RegisterDatanodeLifelineProtocolServiceServer(s *grpc.Server, srv DatanodeLifelineProtocolServiceServer) {
	s.RegisterService(&_DatanodeLifelineProtocolService_serviceDesc, srv)
}

func _DatanodeLifelineProtocolService_SendLifeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(hproto_hdfs_datanode.HeartbeatRequestProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatanodeLifelineProtocolServiceServer).SendLifeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hproto.hdfs.datanodelifeline.DatanodeLifelineProtocolService/SendLifeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatanodeLifelineProtocolServiceServer).SendLifeline(ctx, req.(*hproto_hdfs_datanode.HeartbeatRequestProto))
	}
	return interceptor(ctx, in, info, handler)
}

var _DatanodeLifelineProtocolService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hproto.hdfs.datanodelifeline.DatanodeLifelineProtocolService",
	HandlerType: (*DatanodeLifelineProtocolServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "sendLifeline",
			Handler:    _DatanodeLifelineProtocolService_SendLifeline_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() {
	proto.RegisterFile("gopkg.in/freddierice/go-hproto.v1/hdfs/datanodelifeline/DatanodeLifelineProtocol.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x0a, 0x4b, 0xcf, 0x2f, 0xc8,
	0x4e, 0xd7, 0xcb, 0xcc, 0xd3, 0x4f, 0x2b, 0x4a, 0x4d, 0x49, 0xc9, 0x4c, 0x2d, 0xca, 0x4c, 0x4e,
	0xd5, 0x4f, 0xcf, 0xd7, 0xcd, 0x28, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2b, 0x33, 0xd4, 0xcf, 0x48,
	0x49, 0x2b, 0xd6, 0x4f, 0x49, 0x2c, 0x49, 0xcc, 0xcb, 0x4f, 0x49, 0xcd, 0xc9, 0x4c, 0x03, 0xe2,
	0xbc, 0x54, 0x7d, 0x17, 0xa8, 0x80, 0x0f, 0x54, 0x20, 0x00, 0xa4, 0x3c, 0x39, 0x3f, 0x47, 0x0f,
	0xac, 0x4f, 0x48, 0x06, 0xaa, 0x1f, 0xa4, 0x59, 0x0f, 0x5d, 0xb3, 0x94, 0x1b, 0x89, 0xb6, 0xc2,
	0x6d, 0x43, 0xb5, 0x45, 0x49, 0x9c, 0x4b, 0x14, 0x66, 0x7f, 0x50, 0x6a, 0x71, 0x41, 0x7e, 0x5e,
	0x31, 0x44, 0x85, 0xd1, 0x64, 0x46, 0x2e, 0x79, 0x5c, 0x2e, 0x0c, 0x4e, 0x2d, 0x2a, 0x03, 0x5a,
	0x27, 0x54, 0xc0, 0xc5, 0x53, 0x9c, 0x9a, 0x97, 0x02, 0x93, 0x16, 0xd2, 0xd6, 0xc3, 0xe6, 0x66,
	0x3d, 0x8f, 0xd4, 0xc4, 0xa2, 0x92, 0xa4, 0xd4, 0xc4, 0x92, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2,
	0x12, 0xb0, 0x31, 0x52, 0xc6, 0x7a, 0xf8, 0x3c, 0xa8, 0x87, 0xd5, 0x55, 0x4e, 0xbe, 0x5c, 0xaa,
	0xf9, 0x45, 0xe9, 0x7a, 0x89, 0x05, 0x89, 0xc9, 0x19, 0xa9, 0x28, 0x06, 0x14, 0xa0, 0xf8, 0xcb,
	0x49, 0x0e, 0x97, 0xdb, 0xc1, 0x74, 0x71, 0x07, 0x23, 0xe3, 0x02, 0x46, 0x46, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xce, 0x55, 0x4f, 0x86, 0xbc, 0x01, 0x00, 0x00,
}
